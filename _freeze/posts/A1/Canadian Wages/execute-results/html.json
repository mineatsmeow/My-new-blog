{
  "hash": "376733e5778dc62350041c15bd40fb4f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Canadian Wages\"\n---\n\n## Setup R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Our all-in-one package\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr) # Looking at data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(janitor) # Clean the data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(naniar) # Handle missing data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'naniar'\n\nThe following object is masked from 'package:skimr':\n\n    n_complete\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visdat) # Visualise missing data\nlibrary(tinytable) # Printing Static Tables for our data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tinytable'\n\nThe following object is masked from 'package:ggplot2':\n\n    theme_void\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(DT) # Interactive Tables for our data\nlibrary(crosstable) # Multiple variable summaries\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula) # Graphing\n```\n:::\n\n\n## Read Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncan_wages <- read_csv(\"Data/Canadian_Wages.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7425 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): sex, language\ndbl (4): rownames, wages, education, age\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Viewing the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::glimpse(can_wages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,425\nColumns: 6\n$ rownames  <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ wages     <dbl> 10.56, 11.00, NA, 17.76, NA, 14.00, NA, NA, 8.20, NA, NA, 16…\n$ education <dbl> 15.0, 13.2, 16.0, 14.0, 8.0, 16.0, 12.0, 14.5, 15.0, 10.0, 1…\n$ age       <dbl> 40, 19, 49, 46, 71, 50, 70, 42, 31, 56, 71, 30, 56, 61, 25, …\n$ sex       <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", …\n$ language  <chr> \"English\", \"English\", \"Other\", \"Other\", \"English\", \"English\"…\n```\n\n\n:::\n:::\n\n\n## Data Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_modified <- can_wages %>%\n  janitor::clean_names(case = \"snake\") # clean names\n\nwages_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,425 × 6\n   rownames wages education   age sex    language\n      <dbl> <dbl>     <dbl> <dbl> <chr>  <chr>   \n 1        1  10.6      15      40 Male   English \n 2        2  11        13.2    19 Male   English \n 3        3  NA        16      49 Male   Other   \n 4        4  17.8      14      46 Male   Other   \n 5        5  NA         8      71 Male   English \n 6        6  14        16      50 Female English \n 7        7  NA        12      70 Female English \n 8        8  NA        14.5    42 Female English \n 9        9   8.2      15      31 Male   English \n10       10  NA        10      56 Female English \n# ℹ 7,415 more rows\n```\n\n\n:::\n:::\n\n\n## Replacing NA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_modified1 <- wages_modified %>%\n  naniar::replace_with_na_all(condition = ~ .x %in% common_na_numbers) %>%\n  replace_with_na_all(condition = ~ .x %in% common_na_strings)\nglimpse(wages_modified1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,425\nColumns: 6\n$ rownames  <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ wages     <dbl> 10.56, 11.00, NA, 17.76, NA, 14.00, NA, NA, 8.20, NA, NA, 16…\n$ education <dbl> 15.0, 13.2, 16.0, 14.0, 8.0, 16.0, 12.0, 14.5, 15.0, 10.0, 1…\n$ age       <dbl> 40, 19, 49, 46, 71, 50, 70, 42, 31, 56, 71, 30, 56, 61, 25, …\n$ sex       <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", …\n$ language  <chr> \"English\", \"English\", \"Other\", \"Other\", \"English\", \"English\"…\n```\n\n\n:::\n:::\n\n\n## Dropping NA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_modified_clean <- wages_modified1 %>% \n tidyr::drop_na() \nwages_modified_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,980 × 6\n   rownames wages education   age sex    language\n      <dbl> <dbl>     <dbl> <dbl> <chr>  <chr>   \n 1        1 10.6       15      40 Male   English \n 2        2 11         13.2    19 Male   English \n 3        4 17.8       14      46 Male   Other   \n 4        6 14         16      50 Female English \n 5        9  8.2       15      31 Male   English \n 6       12 17.0       13.5    30 Female English \n 7       14  6.7       12      61 Female English \n 8       20 14         14      46 Female Other   \n 9       25 19.2       18      43 Male   English \n10       26  7.25      11      17 Male   English \n# ℹ 3,970 more rows\n```\n\n\n:::\n:::\n\n\n## Missing Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisdat::vis_miss(wages_modified_clean)\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nvisdat::vis_dat(wages_modified_clean, sort_type = TRUE, palette = \"cb_safe\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n## Data Munging\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_munged <- wages_modified_clean %>%\n  mutate(\n    sex = as.factor(sex),\n    language = as.factor(language)\n  ) %>%\n  # arrange the Qualitative (factors) first, then Quantitative\n  dplyr::relocate(where(is.factor), .after = rownames)\n\nglimpse(wages_munged)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,980\nColumns: 6\n$ rownames  <dbl> 1, 2, 4, 6, 9, 12, 14, 20, 25, 26, 29, 30, 31, 37, 38, 43, 4…\n$ sex       <fct> Male, Male, Male, Female, Male, Female, Female, Female, Male…\n$ language  <fct> English, English, Other, English, English, English, English,…\n$ wages     <dbl> 10.56, 11.00, 17.76, 14.00, 8.20, 16.97, 6.70, 14.00, 19.20,…\n$ education <dbl> 15.0, 13.2, 14.0, 16.0, 15.0, 13.5, 12.0, 14.0, 18.0, 11.0, …\n$ age       <dbl> 40, 19, 46, 50, 31, 30, 61, 46, 43, 17, 46, 32, 35, 39, 32, …\n```\n\n\n:::\n:::\n\n\n## Table Captioning (Title)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_munged %>%\n  head(10) %>%\n  tinytable::tt(caption = \"Wage Dataset (Clean)\") %>%\n  tinytable::theme_html(class = \"table table-hover table-striped table-condensed\") %>%\n  style_tt(fontsize = 0.8) %>%\n  stats::setNames(c(\"Row ID\", \"Sex\", \"Language\", \"Wages\", \"Education\", \"Age\"))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_rk3nz41e1vsrmlban8b7(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_rk3nz41e1vsrmlban8b7\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_rk3nz41e1vsrmlban8b7(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_rk3nz41e1vsrmlban8b7\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '10', j: 4 }, { i: '10', j: 2 }, { i: '10', j: 3 }, { i: '10', j: 0 }, { i: '10', j: 1 }, { i: '10', j: 5 },  ], css_id: 'tinytable_css_ugz6vfn5th4gtb6y3co5',}, \n          { positions: [ { i: '2', j: 0 }, { i: '4', j: 0 }, { i: '6', j: 0 }, { i: '8', j: 0 }, { i: '1', j: 0 }, { i: '1', j: 2 }, { i: '1', j: 1 }, { i: '2', j: 1 }, { i: '3', j: 1 }, { i: '4', j: 1 }, { i: '3', j: 0 }, { i: '6', j: 1 }, { i: '5', j: 0 }, { i: '8', j: 1 }, { i: '7', j: 0 }, { i: '1', j: 3 }, { i: '9', j: 0 }, { i: '3', j: 3 }, { i: '2', j: 2 }, { i: '3', j: 2 }, { i: '4', j: 2 }, { i: '5', j: 2 }, { i: '6', j: 2 }, { i: '5', j: 1 }, { i: '8', j: 2 }, { i: '7', j: 1 }, { i: '1', j: 4 }, { i: '9', j: 1 }, { i: '3', j: 4 }, { i: '2', j: 3 }, { i: '5', j: 4 }, { i: '4', j: 3 }, { i: '5', j: 3 }, { i: '6', j: 3 }, { i: '7', j: 3 }, { i: '8', j: 3 }, { i: '7', j: 2 }, { i: '1', j: 5 }, { i: '9', j: 2 }, { i: '3', j: 5 }, { i: '2', j: 4 }, { i: '5', j: 5 }, { i: '4', j: 4 }, { i: '7', j: 5 }, { i: '6', j: 4 }, { i: '7', j: 4 }, { i: '8', j: 4 }, { i: '9', j: 4 }, { i: '9', j: 3 }, { i: '9', j: 5 }, { i: '2', j: 5 }, { i: '4', j: 5 }, { i: '6', j: 5 }, { i: '8', j: 5 },  ], css_id: 'tinytable_css_5qvg59q2aiqcxr4bkone',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 4 }, { i: '0', j: 5 }, { i: '0', j: 2 }, { i: '0', j: 3 }, { i: '0', j: 1 },  ], css_id: 'tinytable_css_o5d079abq0iu4g83h126',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_rk3nz41e1vsrmlban8b7(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_ugz6vfn5th4gtb6y3co5, .table th.tinytable_css_ugz6vfn5th4gtb6y3co5 { font-size: 0.8em; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_5qvg59q2aiqcxr4bkone, .table th.tinytable_css_5qvg59q2aiqcxr4bkone { font-size: 0.8em; }\n      .table td.tinytable_css_o5d079abq0iu4g83h126, .table th.tinytable_css_o5d079abq0iu4g83h126 { font-size: 0.8em; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-hover table-striped table-condensed\" id=\"tinytable_rk3nz41e1vsrmlban8b7\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Wage Dataset (Clean)</caption>\n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">Row ID</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">Sex</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">Language</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">Wages</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">Education</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">Age</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">1</td>\n                  <td data-row=\"1\" data-col=\"1\">Male</td>\n                  <td data-row=\"1\" data-col=\"2\">English</td>\n                  <td data-row=\"1\" data-col=\"3\">10.56</td>\n                  <td data-row=\"1\" data-col=\"4\">15.0</td>\n                  <td data-row=\"1\" data-col=\"5\">40</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">2</td>\n                  <td data-row=\"2\" data-col=\"1\">Male</td>\n                  <td data-row=\"2\" data-col=\"2\">English</td>\n                  <td data-row=\"2\" data-col=\"3\">11.00</td>\n                  <td data-row=\"2\" data-col=\"4\">13.2</td>\n                  <td data-row=\"2\" data-col=\"5\">19</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">4</td>\n                  <td data-row=\"3\" data-col=\"1\">Male</td>\n                  <td data-row=\"3\" data-col=\"2\">Other</td>\n                  <td data-row=\"3\" data-col=\"3\">17.76</td>\n                  <td data-row=\"3\" data-col=\"4\">14.0</td>\n                  <td data-row=\"3\" data-col=\"5\">46</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">6</td>\n                  <td data-row=\"4\" data-col=\"1\">Female</td>\n                  <td data-row=\"4\" data-col=\"2\">English</td>\n                  <td data-row=\"4\" data-col=\"3\">14.00</td>\n                  <td data-row=\"4\" data-col=\"4\">16.0</td>\n                  <td data-row=\"4\" data-col=\"5\">50</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">9</td>\n                  <td data-row=\"5\" data-col=\"1\">Male</td>\n                  <td data-row=\"5\" data-col=\"2\">English</td>\n                  <td data-row=\"5\" data-col=\"3\">8.20</td>\n                  <td data-row=\"5\" data-col=\"4\">15.0</td>\n                  <td data-row=\"5\" data-col=\"5\">31</td>\n                </tr>\n                <tr>\n                  <td data-row=\"6\" data-col=\"0\">12</td>\n                  <td data-row=\"6\" data-col=\"1\">Female</td>\n                  <td data-row=\"6\" data-col=\"2\">English</td>\n                  <td data-row=\"6\" data-col=\"3\">16.97</td>\n                  <td data-row=\"6\" data-col=\"4\">13.5</td>\n                  <td data-row=\"6\" data-col=\"5\">30</td>\n                </tr>\n                <tr>\n                  <td data-row=\"7\" data-col=\"0\">14</td>\n                  <td data-row=\"7\" data-col=\"1\">Female</td>\n                  <td data-row=\"7\" data-col=\"2\">English</td>\n                  <td data-row=\"7\" data-col=\"3\">6.70</td>\n                  <td data-row=\"7\" data-col=\"4\">12.0</td>\n                  <td data-row=\"7\" data-col=\"5\">61</td>\n                </tr>\n                <tr>\n                  <td data-row=\"8\" data-col=\"0\">20</td>\n                  <td data-row=\"8\" data-col=\"1\">Female</td>\n                  <td data-row=\"8\" data-col=\"2\">Other</td>\n                  <td data-row=\"8\" data-col=\"3\">14.00</td>\n                  <td data-row=\"8\" data-col=\"4\">14.0</td>\n                  <td data-row=\"8\" data-col=\"5\">46</td>\n                </tr>\n                <tr>\n                  <td data-row=\"9\" data-col=\"0\">25</td>\n                  <td data-row=\"9\" data-col=\"1\">Male</td>\n                  <td data-row=\"9\" data-col=\"2\">English</td>\n                  <td data-row=\"9\" data-col=\"3\">19.20</td>\n                  <td data-row=\"9\" data-col=\"4\">18.0</td>\n                  <td data-row=\"9\" data-col=\"5\">43</td>\n                </tr>\n                <tr>\n                  <td data-row=\"10\" data-col=\"0\">26</td>\n                  <td data-row=\"10\" data-col=\"1\">Male</td>\n                  <td data-row=\"10\" data-col=\"2\">English</td>\n                  <td data-row=\"10\" data-col=\"3\">7.25</td>\n                  <td data-row=\"10\" data-col=\"4\">11.0</td>\n                  <td data-row=\"10\" data-col=\"5\">17</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n## Quant Bar Graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram of Wages\ngf_histogram(~wages, data = wages_munged, bins = 30, fill = \"pink\") %>%\n  gf_labs(title = \"Distribution of Wages\", x = \"Wages\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Histogram of Education\ngf_histogram(~education, data = wages_munged, bins = 20, fill = \"purple\") %>%\n  gf_labs(title = \"Distribution of Education Years\", x = \"Years of Education\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Histogram of Age\ngf_histogram(~age, data = wages_munged, bins = 20, fill = \"blue\") %>%\n  gf_labs(title = \"Distribution of Age\", x = \"Age\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\n## Quant Bar Graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bar graph of Sex\ngf_bar(~sex, data = wages_munged, fill = ~sex) %>%\n  gf_labs(title = \"Counts of Respondents by Sex\", x = \"Sex\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Bar graph of Language\ngf_bar(~language, data = wages_munged, fill = ~language) %>%\n  gf_labs(title = \"Counts of Respondents by Language\", x = \"Language\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n\n\n## Quant Log Scale\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Wages by Sex\ngf_boxplot(sex ~ wages, data = wages_munged, fill = ~sex, orientation = \"y\") %>%\n  gf_labs(title = \"Wages by Sex\", x = \"Wages\", y = \"Sex\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Wages by Language\ngf_boxplot(language ~ wages, data = wages_munged, fill = ~language, orientation = \"y\") %>%\n  gf_labs(title = \"Wages by Language\", x = \"Wages\", y = \"Language\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Education by Sex\ngf_boxplot(sex ~ education, data = wages_munged, fill = ~sex, orientation = \"y\") %>%\n  gf_labs(title = \"Education Years by Sex\", x = \"Education (Years)\", y = \"Sex\")\n```\n\n::: {.cell-output-display}\n![](Canadian-Wages_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::count(wages_munged)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  3980\n```\n\n\n:::\n\n```{.r .cell-code}\ndplyr::summarise(wages_munged)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 0\n```\n\n\n:::\n\n```{.r .cell-code}\ncrosstable::crosstable(wages_munged)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 21 × 4\n   .id      label    variable   value                 \n   <chr>    <chr>    <chr>      <chr>                 \n 1 rownames rownames Min / Max  1.0 / 7425.0          \n 2 rownames rownames Med [IQR]  3699.0 [1838.5;5584.2]\n 3 rownames rownames Mean (std) 3713.1 (2145.2)       \n 4 rownames rownames N (NA)     3980 (0)              \n 5 sex      sex      Female     1997 (50.18%)         \n 6 sex      sex      Male       1983 (49.82%)         \n 7 language language English    3238 (81.36%)         \n 8 language language French     259 (6.51%)           \n 9 language language Other      483 (12.14%)          \n10 wages    wages    Min / Max  2.3 / 49.9            \n# ℹ 11 more rows\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "Canadian-Wages_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}